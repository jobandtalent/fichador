load_module /etc/nginx/modules/ngx_http_perl_module.so;

env HOSTNAME;

user nginx;
worker_processes 1;

error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

events {
  worker_connections 1024;
}

http {
  include /etc/nginx/mime.types;
  default_type application/octet-stream;

  log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                  '$status $body_bytes_sent "$http_referer" '
                  '"$http_user_agent" "$http_x_forwarded_for"';

  access_log /var/log/nginx/access.log  main;

  sendfile on;

  keepalive_timeout 65;

  resolver 127.0.0.11; # Docker's default nameserver.

  perl_set $proxy_pass_host 'sub {
    my $r = shift;
    my $hostname = $ENV{"HOSTNAME"};
    my $service_host = $r->variable("host");
    my $request_uri = $r->variable("request_uri");

    # Extract the name of the service.
    #
    # Example:
    #
    #     $hostname = some-domain.comm
    #     $service_host = www.service.some-domain.comm
    #
    #     s/^(www\.|api\.)//g
    #     #=> service.some-domain.comm
    #
    #     s/(\.)?$hostname//g;
    #     #=> service
    $service_host =~ s/^(www\.|api\.)//g;
    $service_host =~ s/(\.)?$hostname//g;

    return $service_host;
  }';

  map $http_upgrade $connection_upgrade {
      default upgrade;
      ''      close;
  }

  server {
    listen 80 default_server;

    location / {
      proxy_set_header Host $http_host;
      proxy_redirect off;
      proxy_pass http://$proxy_pass_host:8080;
      add_header X-Service-Host $proxy_pass_host always;

      # WebSocket proxying - from http://nginx.org/en/docs/http/websocket.html
      proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection $connection_upgrade;
    }
  }
}
